name:  Deploy Blazor App To on

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  Build_Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Test with the dotnet CLI
        run: dotnet test

  Push_To_DockerHub:
    needs: Build_Tests
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME : "blazorapp"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
      
#  Push_Deploy_To_Azure:
#    needs: Build_Tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout source code 
#        uses: actions/checkout@v3
#      - name: ACR build
#        id: build-push-acr
#        uses: azure/acr-build@v1
#        with:
#          service_principal: ${{ secrets.service_principal }}
#          service_principal_password: ${{ secrets.service_principal_password }}
#          tenant: ${{ secrets.tenant }}
#          registry: ${{ secrets.registry }}
#          repository: ${{ secrets.repository }}
#          image:  azure-vote-front
#          folder: azure-vote
#          branch: master
#          tag: ${{ github.sha }}
#
#      - name: Azure login
#        id: login
#        uses: azure/login@v1.4.3
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#      - name: Set AKS context
#        id: set-context
#        uses: azure/aks-set-context@v3
#        with:
#          resource-group: '${{ secrets.resource_group }}' 
#          cluster-name: '${{ secrets.cluster_name }}'
#      - name: Setup kubectl
#        id: install-kubectl
#        uses: azure/setup-kubectl@v3
#      - name: Deploy to AKS
#        id: deploy-aks
#        uses: Azure/k8s-deploy@v4
#        with:
#          namespace: 'default'
#          manifests: |
#             ./k8s/deploy.yml
#          images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/azure-vote-front:${{ github.sha }}'
#          pull-images: false